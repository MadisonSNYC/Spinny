/* Step S2 - Kill CLS (reserve card height) */
:root { 
  --tile-w: 80px;  /* matches current card width */
}

.helix-tile {
  position: absolute;
  width: var(--tile-w);
  aspect-ratio: 9 / 16;  /* reserves height => prevents CLS */
  transform-style: preserve-3d;
}

.helix-tile img,
.helix-tile .tile-media {
  width: 100%;
  height: 100%;
  object-fit: cover;
  display: block;
}

/* Step S4 - Curved Cards + Depth Opacity */
/* --- Curved card surface (rounded + subtle shading) --- */
.tile-card {
  position: relative;              /* for ::before mask */
  border-radius: 12px;             /* "curve the card" visual */
  overflow: hidden;                /* keep media inside rounded edges */
  transition: opacity 120ms linear;/* smooth depth fade */
}

/* Note: Previous S4 lateral highlights replaced by S4.2 symmetric bow effect */

/* --- Depth opacity tiers (front -> back) --- */
.helix-tile.depth-near  .tile-card { opacity: var(--opacity-near, 1);   }
.helix-tile.depth-mid   .tile-card { opacity: var(--opacity-mid, .82);  }
.helix-tile.depth-far   .tile-card { opacity: var(--opacity-far, .62);  }

/* Keep the backface safety from S1 (repeat here in case) */
.tile-card {
  backface-visibility: hidden;
  -webkit-backface-visibility: hidden;
  transform-style: preserve-3d;
}

/* ======================================
   STEP S4.2 - BOWED SURFACE (convex) — additive only
   ====================================== */

/* Tuning knobs (safe defaults) */
:root {
  --bow-highlight: .14;   /* central specular line intensity */
  --bow-vignette : .18;   /* edge darkening amount */
  --bow-radius   : 12px;  /* keep your rounded corners */
}

/* Ensure .tile-card clips its contents */
.tile-card {
  position: relative;
  border-radius: var(--bow-radius);
  overflow: hidden;
}

/* Symmetric central specular highlight — vertical, not left/right */
.tile-card::before {
  content: '';
  position: absolute; 
  inset: 0;
  pointer-events: none;
  /* vertical highlight that fades to edges */
  background:
    linear-gradient(90deg,
      rgba(255,255,255,0) 0%,
      rgba(255,255,255,var(--bow-highlight)) 50%,
      rgba(255,255,255,0) 100%
    );
  opacity: 1;               /* keep blend normal to avoid tilt illusion */
  mix-blend-mode: normal;   /* no overlay/screen here */
}

/* Symmetric edge vignette to suggest curvature toward edges */
.tile-card::after {
  content: '';
  position: absolute; 
  inset: 0;
  pointer-events: none;
  background:
    radial-gradient(110% 80% at 50% 50%,
      rgba(0,0,0,0) 45%,
      rgba(0,0,0,var(--bow-vignette)) 95%
    );
  opacity: 1;
}

/* Keep depth fade from S4 (ensure it applies to the whole card) */
.helix-tile.depth-near  .tile-card { opacity: var(--opacity-near, 1);   }
.helix-tile.depth-mid   .tile-card { opacity: var(--opacity-mid,  .82); }
.helix-tile.depth-far   .tile-card { opacity: var(--opacity-far,  .62); }

/* Optional: dial back on small screens */
@media (max-width: 768px) {
  :root {
    --bow-highlight: .10;
    --bow-vignette : .14;
    --bow-radius   : 10px;
  }
}

/* Sanity check media clipping (no square edges poking out) */
.tile-card > img,
.tile-card > .tile-media {
  width: 100%; 
  height: 100%;
  object-fit: cover;
  display: block;
}

/* ======================================
   STEP S4.3b - BOWED CARD (convex slicing)
   ====================================== */

.bow {
  position: relative;
  width: 100%;
  height: 100%;
  transform-style: preserve-3d;
}

.bow-slices {
  position: relative;
  width: 100%;
  height: 100%;
  display: flex;
  transform-style: preserve-3d;
}

.bow-slice {
  position: relative;
  flex: 1;
  height: 100%;
  background-size: calc(var(--bow-slices, 9) * 100%) 100%;
  background-repeat: no-repeat;
  transform-style: preserve-3d;
  backface-visibility: hidden;
  -webkit-backface-visibility: hidden;
}

/* Optional edge enhancement */
.bow-slice.edge {
  opacity: 0.98; /* Subtle edge fade for realism */
}

/* ======================================
   STEP S5 - DEPTH-AWARE BLUR (media only)
   ====================================== */

/* ---------- Depth blur amounts (tunable) ---------- */
:root {
  --blur-near: 0px;
  --blur-mid : 0.6px;
  --blur-far : 1.6px;   /* keep <= ~2px for perf */
}

/* Mobile: lighten the load */
@media (max-width: 768px) {
  :root {
    --blur-mid : 0.4px;
    --blur-far : 1.0px;
  }
}

/* Media wrapper to receive the blur (NOT the whole card) */
.tile-card .media-3d {
  width: 100%;
  height: 100%;
  display: block;
  object-fit: cover;
  will-change: filter;         /* but only where used (tiers below) */
  transition: filter 120ms linear; /* smooth blur transitions */
}

/* Apply blur by tier. Overlays remain crisp. */
.helix-tile.depth-near  .media-3d { filter: blur(var(--blur-near)); }
.helix-tile.depth-mid   .media-3d { filter: blur(var(--blur-mid));  }
.helix-tile.depth-far   .media-3d { filter: blur(var(--blur-far));  }

/* Keep card UI crisp (titles, badges, etc.) above the media layer */
.tile-card .ui-layer {
  position: absolute;
  inset: 0;
  pointer-events: none; /* if purely decorative labels */
  z-index: 10; /* ensure it's above media */
  display: flex;
  align-items: flex-end;
  padding: 0.5rem;
}

/* ======================================
   STEP S5.3 - PREFERRED TILT/PLACEMENT PRESET
   ====================================== */

/* Ensure tile-content fills parent */
.tile-content {
  width: 100%;
  height: 100%;
  position: relative;
  transform-style: preserve-3d;
}

/* Gate with a class on your effects wrapper */
.fx-depth-placement .tile-content {
  transform-origin: center center;
  will-change: transform;
  transition: transform 120ms linear;
}

/* Desktop preset — tuned to match preferred look */
@media (min-width: 769px) {
  :root {
    /* Z bias pushes / pulls content; scale adds fullness; tilt adds attitude */
    --pp-near-z:  5px;  --pp-near-scale: 1.020; --pp-near-tilt:  0deg;
    --pp-mid-z:   0px;  --pp-mid-scale:  1.000; --pp-mid-tilt:  -0.1deg;
    --pp-far-z:  -9px;  --pp-far-scale:  0.980; --pp-far-tilt:  -0.25deg;
  }
}

/* Mobile: lighter values */
@media (max-width: 768px) {
  :root {
    --pp-near-z:  3px;  --pp-near-scale: 1.010; --pp-near-tilt: 0deg;
    --pp-mid-z:   0px;  --pp-mid-scale:  1.000; --pp-mid-tilt: -0.05deg;
    --pp-far-z:  -6px;  --pp-far-scale:  0.990; --pp-far-tilt: -0.15deg;
  }
}

/* Apply per-tier using CSS variables for smooth transitions */
.fx-depth-placement .helix-tile.depth-near {
  --depth-z: var(--pp-near-z);
  --depth-scale-multiplier: var(--pp-near-scale);
  --depth-tilt: var(--pp-near-tilt);
}
.fx-depth-placement .helix-tile.depth-mid {
  --depth-z: var(--pp-mid-z);
  --depth-scale-multiplier: var(--pp-mid-scale);
  --depth-tilt: var(--pp-mid-tilt);
}
.fx-depth-placement .helix-tile.depth-far {
  --depth-z: var(--pp-far-z);
  --depth-scale-multiplier: var(--pp-far-scale);
  --depth-tilt: var(--pp-far-tilt);
}

/* Ensure blur stays media-only and placement doesn't blur UI */
.helix-tile .media-3d { filter: inherit; }
.helix-tile .ui-layer { filter: none; }

/* Legacy S5.2 classes for backwards compatibility */
.fx-pref-placement .tile-content {
  /* Redirect to new preset */
  transform-origin: center center;
  will-change: transform;
}
.fx-pref-placement .helix-tile.depth-near  .tile-content,
.fx-pref-placement .helix-tile.depth-mid   .tile-content,
.fx-pref-placement .helix-tile.depth-far   .tile-content {
  /* Override handled by fx-depth-placement now */
  transform: none;
}

/* ======================================
   STEP S6 - OUTWARD TURN + GHOST BACK (gated by fx-outward)
   ====================================== */

/* Gate the feature so you can toggle it */
.fx-outward .tile-content {
  transform-origin: center center;
}

/* Add outward opening on top of placement transforms */
.fx-outward .helix-tile.depth-near .tile-content {
  transform:
    translateZ(var(--pp-near-z))
    scale(var(--pp-near-scale))
    rotateX(var(--pp-near-tilt))
    rotateY(var(--pp-yaw, 0deg))
    rotateZ(var(--pp-roll, 0deg))
    rotateY(var(--pp-open, 0deg)) !important;
}
.fx-outward .helix-tile.depth-mid .tile-content {
  transform:
    translateZ(var(--pp-mid-z))
    scale(var(--pp-mid-scale))
    rotateX(var(--pp-mid-tilt))
    rotateY(var(--pp-yaw, 0deg))
    rotateZ(var(--pp-roll, 0deg))
    rotateY(var(--pp-open, 0deg)) !important;
}
.fx-outward .helix-tile.depth-far .tile-content {
  transform:
    translateZ(var(--pp-far-z))
    scale(var(--pp-far-scale))
    rotateX(var(--pp-far-tilt))
    rotateY(var(--pp-yaw, 0deg))
    rotateZ(var(--pp-roll, 0deg))
    rotateY(var(--pp-open, 0deg)) !important;
}

/* Ghost: mirrored backside behind the card (images) */
.tile-ghost {
  position: absolute;
  inset: 0;
  pointer-events: none;
  background-size: cover;
  background-position: center;
  opacity: var(--ghost, 0);
  filter: blur(2px) saturate(0.9);
  transform: translateZ(calc(-1 * var(--ghost-z, 12px))) rotateY(180deg) scale(0.98);
  transition: opacity 120ms linear, transform 120ms linear;
}

/* Video fallback: gradient "ghost" */
.tile-ghost.ghost-fallback {
  background: radial-gradient(80% 70% at 50% 50%, rgba(255,255,255,0.08), rgba(0,0,0,0.0) 60%, rgba(0,0,0,0.5));
}

/* Safety: when not scrolling (ghost ~0), place content baseline */
.fx-outward .helix-tile .tile-content {
  will-change: transform;
}

/* Ensure our placement transform wins only in placement mode */
.fx-depth-placement .helix-tile .tile-content {
  transform: translateZ(0) scale(1) rotateX(0); /* baseline */
}

/* ======================================
   STEP FS2 - SCROLL STABILIZERS
   ====================================== */

/* Prevent bounce / momentum from propagating */
.helix-section, .helix-scene {
  overscroll-behavior: contain;
}
.fx-depth-placement .helix-tile.depth-near .tile-content {
  transform:
    translateZ(var(--pp-near-z))
    scale(var(--pp-near-scale))
    rotateX(var(--pp-near-tilt))
    rotateY(var(--pp-yaw, 0deg))
    rotateZ(var(--pp-roll, 0deg)) !important;
}
.fx-depth-placement .helix-tile.depth-mid .tile-content {
  transform:
    translateZ(var(--pp-mid-z))
    scale(var(--pp-mid-scale))
    rotateX(var(--pp-mid-tilt))
    rotateY(var(--pp-yaw, 0deg))
    rotateZ(var(--pp-roll, 0deg)) !important;
}
.fx-depth-placement .helix-tile.depth-far .tile-content {
  transform:
    translateZ(var(--pp-far-z))
    scale(var(--pp-far-scale))
    rotateX(var(--pp-far-tilt))
    rotateY(var(--pp-yaw, 0deg))
    rotateZ(var(--pp-roll, 0deg)) !important;
}
/* ======================================
   STEP CL1 - CENTER LOGO (replaces wireframe)
   ====================================== */

/* Center logo replacement for wireframe - moves with scroll */
.center-logo {
  position: absolute;
  left: 50%;
  top: 50%;
  width: 207px;  /* 300% of 69px */
  height: auto;
  transform: translate(-50%, -50%) translateZ(var(--logo-z, 0px)) translateY(var(--scroll-offset-y, 0px));
  opacity: var(--logo-opacity, 0.85);
  filter: drop-shadow(0 2px 6px rgba(0,0,0,.25));
  pointer-events: none;  /* don't block interactions */
  will-change: transform, opacity;
  user-select: none;
  -webkit-user-select: none;
  transition: transform 0.1s ease-out;
}

/* Only hide wireframe lines (star pattern) when logo is shown, keep circles */
.fx-center-logo .wireframe-tripod {
  display: none !important;
}

/* Billboard mode - always faces forward */
.center-logo.billboard {
  position: absolute;
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%) rotateY(calc(-1 * var(--sceneDeg, 0deg)));
  transform-style: preserve-3d;
  backface-visibility: visible;
}

/* Rotate mode - rotates with scene */
.center-logo.rotate {
  transform: translate(-50%, -50%) translateZ(var(--logo-z, 0px));
}

/* Subtle rotation animation (optional) */
@media (prefers-reduced-motion: no-preference) {
  .center-logo.rotate {
    animation: gentle-float 20s ease-in-out infinite;
  }
}

@keyframes gentle-float {
  0%, 100% { transform: translate(-50%, -50%) translateZ(0px) rotateY(0deg); }
  50% { transform: translate(-50%, -50%) translateZ(10px) rotateY(180deg); }
}

/* ======================================
   RGB EDGE EFFECT - Chromatic card edges
   ====================================== */

.fx-rgb-edge .helix-node > div {
  position: relative;
}

/* RGB edge effect using pseudo-elements */
.fx-rgb-edge .helix-node > div::before {
  content: '';
  position: absolute;
  inset: -2px;
  background: linear-gradient(45deg, 
    #ff0066 0%, 
    #00ffcc 25%, 
    #0066ff 50%, 
    #ff00cc 75%, 
    #ff0066 100%
  );
  border-radius: 12px;
  z-index: -1;
  opacity: 0.6;
  filter: blur(2px);
  animation: rgb-shift 3s linear infinite;
}

@keyframes rgb-shift {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}

/* Enhance on hover */
.fx-rgb-edge .helix-node:hover > div::before {
  opacity: 0.9;
  filter: blur(3px);
  animation-duration: 1s;
}

/* ======================================
   CINEMATIC COLOR INTENSIFICATION
   ====================================== */

/* Base cinematic enhancement - only apply to scene container */
.helix-scene.fx-cinematic {
  position: relative;
  filter: 
    saturate(var(--cinematic-saturation, 1.4))
    contrast(var(--cinematic-contrast, 1.2))
    brightness(var(--cinematic-brightness, 1.1))
    hue-rotate(var(--cinematic-hue, 0deg));
  transition: filter 0.3s ease;
}

/* Lighter effect for individual cards to avoid double-filtering */
.helix-node.fx-cinematic {
  /* No filter on individual cards - inherit from scene */
}

/* Intensify on scroll speed */
.fx-cinematic.scroll-fast {
  --cinematic-saturation: 1.8;
  --cinematic-contrast: 1.4;
  --cinematic-brightness: 1.2;
  --cinematic-hue: 5deg;
}

.fx-cinematic.scroll-ultra-fast {
  --cinematic-saturation: 2.2;
  --cinematic-contrast: 1.6;
  --cinematic-brightness: 1.3;
  --cinematic-hue: 10deg;
}

/* Apply to media elements - preserve dimensions */
.fx-cinematic .media-3d,
.fx-cinematic video,
.fx-cinematic img {
  /* Don't inherit filter to avoid affecting layout */
}

/* Cinematic vignette overlay */
.fx-cinematic::after {
  content: '';
  position: fixed;
  inset: 0;
  pointer-events: none;
  background: radial-gradient(
    ellipse 70% 50% at center,
    transparent 40%,
    rgba(0,0,0,var(--vignette-strength, 0.15)) 100%
  );
  z-index: 100;
  transition: background 0.3s ease;
}

/* Intensify vignette on fast scroll */
.fx-cinematic.scroll-fast::after {
  --vignette-strength: 0.25;
}

.fx-cinematic.scroll-ultra-fast::after {
  --vignette-strength: 0.35;
}

/* ======================================
   ENHANCED VISUAL EFFECTS (Ashfall Lab Style)
   ====================================== */

/* Animation Keyframes */
@keyframes filmNoise {
  0%, 100% { opacity: 0.1; }
  50% { opacity: 0.2; }
}

@keyframes scanline {
  0% { transform: translateY(-100%); }
  100% { transform: translateY(100vh); }
}

@keyframes screenFlicker {
  0%, 100% { opacity: 1; }
  50% { opacity: 0.98; }
}

@keyframes chromaticShift {
  0% { transform: translateX(0); }
  25% { transform: translateX(1px); }
  50% { transform: translateX(0); }
  75% { transform: translateX(-1px); }
  100% { transform: translateX(0); }
}

@keyframes subtleCurve {
  0%, 100% { transform: perspective(600px) rotateX(2deg); }
  50% { transform: perspective(600px) rotateX(4deg); }
}

/* Screen Glow Effects */
.fx-screen-glow .helix-node > div {
  box-shadow: 
    0 0 20px rgba(6, 182, 212, 0.3),
    0 0 40px rgba(6, 182, 212, 0.2),
    0 0 60px rgba(6, 182, 212, 0.1);
}

.fx-screen-glow .helix-scene::before {
  content: '';
  position: absolute;
  inset: 0;
  background: radial-gradient(
    circle at center,
    rgba(6, 182, 212, 0.1) 0%,
    rgba(6, 182, 212, 0.05) 50%,
    transparent 100%
  );
  animation: screenFlicker 2s ease-in-out infinite;
  pointer-events: none;
}

/* Scan Lines Effect */
.fx-scan-lines .helix-node > div::after {
  content: '';
  position: absolute;
  inset: 0;
  background: repeating-linear-gradient(
    0deg,
    transparent,
    transparent 2px,
    rgba(0, 255, 255, 0.03) 2px,
    rgba(0, 255, 255, 0.03) 4px
  );
  pointer-events: none;
  animation: scanline 3s linear infinite;
}

/* Chromatic Aberration */
.fx-chromatic .helix-node > div::before {
  content: '';
  position: absolute;
  inset: -1px;
  background: inherit;
  filter: 
    drop-shadow(1px 0 0 rgba(255, 0, 0, 0.15))
    drop-shadow(-1px 0 0 rgba(0, 255, 255, 0.15));
  mix-blend-mode: screen;
  animation: chromaticShift 0.5s ease-in-out infinite;
  z-index: -1;
}

/* Film Noise/Grain */
.fx-film-grain::after {
  content: '';
  position: fixed;
  inset: 0;
  opacity: 0.25;
  background-image: 
    radial-gradient(circle, transparent 20%, rgba(255,255,255,0.3) 21%, rgba(255,255,255,0.3) 34%, transparent 35%, transparent),
    linear-gradient(0deg, rgba(255,255,255,0.2), rgba(255,255,255,0.2));
  background-size: 20px 20px, 100% 2px;
  mix-blend-mode: overlay;
  animation: filmNoise 0.1s infinite;
  pointer-events: none;
  z-index: 101;
}

/* Monitor Style Cards */
.fx-monitor-style .helix-node > div {
  border-radius: 0 !important;
  box-shadow: 
    0 0 20px rgba(0, 0, 0, 0.8),
    inset 0 0 0 2px #2a2a2a,
    inset 0 0 0 4px #1a1a1a !important;
}

.fx-monitor-style .helix-node > div::before {
  content: '';
  position: absolute;
  top: -2px;
  left: -2px;
  right: -2px;
  bottom: -2px;
  background: linear-gradient(135deg, #3a3a3a 0%, #1a1a1a 50%, #0a0a0a 100%);
  border-radius: 1px;
  z-index: -1;
}

/* Color Grading Enhancement */
.fx-color-grade {
  filter: 
    contrast(1.1)
    brightness(0.95)
    saturate(1.2)
    hue-rotate(5deg);
}

.fx-color-grade::after {
  content: '';
  position: absolute;
  inset: 0;
  background: 
    linear-gradient(
      45deg,
      rgba(6, 182, 212, 0.02) 0%,
      rgba(139, 69, 19, 0.02) 100%
    );
  mix-blend-mode: overlay;
  pointer-events: none;
}

/* Depth of Field */
.fx-depth-blur::before {
  content: '';
  position: absolute;
  inset: 0;
  background: 
    radial-gradient(
      circle at center,
      transparent 40%,
      rgba(0, 0, 0, 0.1) 70%,
      rgba(0, 0, 0, 0.3) 100%
    );
  backdrop-filter: blur(0.5px);
  pointer-events: none;
}

/* Performance Optimizations */
.fx-screen-glow,
.fx-scan-lines,
.fx-chromatic,
.fx-monitor-style {
  will-change: transform, opacity;
  transform: translateZ(0);
}

/* Reduced Motion Support */
@media (prefers-reduced-motion: reduce) {
  .fx-scan-lines .helix-node > div::after,
  .fx-screen-glow .helix-scene::before,
  .fx-chromatic .helix-node > div::before,
  .fx-film-grain::after {
    animation: none !important;
  }
}

/* ======================================
   ENHANCED DOWNWARD SCROLL MOVEMENT
   ====================================== */

/* Perspective shift during scroll */
.helix-scene.fx-scroll-movement {
  transition: perspective 0.2s ease;
}

.helix-scene.fx-scroll-movement.scroll-fast {
  perspective: 2000px !important; /* Pull back for speed sensation */
}

.helix-scene.fx-scroll-movement.scroll-ultra-fast {
  perspective: 1500px !important; /* Even more dramatic pullback */
}

/* Vertical motion trails */
@keyframes verticalTrail {
  0% { transform: translateY(-100vh); opacity: 0; }
  50% { opacity: 0.3; }
  100% { transform: translateY(100vh); opacity: 0; }
}

.fx-scroll-movement::before {
  content: '';
  position: fixed;
  left: 0;
  right: 0;
  height: 100vh;
  background: linear-gradient(
    180deg,
    transparent 0%,
    rgba(255, 255, 255, 0.05) 45%,
    rgba(255, 255, 255, 0.1) 50%,
    rgba(255, 255, 255, 0.05) 55%,
    transparent 100%
  );
  pointer-events: none;
  opacity: 0;
  z-index: 50;
  transition: opacity 0.3s ease;
}

.fx-scroll-movement.scroll-fast::before {
  opacity: 1;
  animation: verticalTrail 0.8s linear infinite;
}

.fx-scroll-movement.scroll-ultra-fast::before {
  opacity: 1;
  animation: verticalTrail 0.4s linear infinite;
}

/* Speed lines effect */
@keyframes speedLines {
  0% { transform: translateY(-50px); opacity: 0; }
  50% { opacity: 0.6; }
  100% { transform: translateY(100vh); opacity: 0; }
}

.fx-scroll-movement::after {
  content: '';
  position: fixed;
  left: 20%;
  right: 20%;
  height: 2px;
  background: repeating-linear-gradient(
    90deg,
    transparent 0%,
    rgba(255, 255, 255, 0.3) 10%,
    transparent 20%
  );
  pointer-events: none;
  opacity: 0;
  z-index: 49;
}

.fx-scroll-movement.scroll-fast::after,
.fx-scroll-movement.scroll-ultra-fast::after {
  opacity: 1;
  animation: speedLines 0.6s linear infinite;
}

/* Unified smooth transitions for all cards */
.helix-node {
  transform-origin: center center;
  transition: transform 0.08s ease-out, opacity 0.2s ease;
  will-change: transform, opacity;
}

/* Dynamic card scaling during fast scroll - using CSS variables */
.fx-scroll-movement.scroll-fast .helix-node {
  --scroll-scale-multiplier: 1.03;
}

.fx-scroll-movement.scroll-ultra-fast .helix-node {
  --scroll-scale-multiplier: 1.06;
}

/* Default scroll scale */
.helix-node {
  --scroll-scale-multiplier: 1;
  --depth-scale-multiplier: 1;
  --final-scale: 1;
}

/* Tunnel effect background */
.fx-scroll-movement .helix-assembly {
  position: relative;
}

.fx-scroll-movement.scroll-fast .helix-assembly::before {
  content: '';
  position: absolute;
  inset: -50%;
  background: 
    radial-gradient(
      ellipse 80% 60% at center,
      transparent 30%,
      rgba(0, 0, 0, 0.1) 70%,
      rgba(0, 0, 0, 0.3) 100%
    );
  pointer-events: none;
  z-index: -1;
  animation: tunnelPulse 0.5s ease-in-out infinite;
}

.fx-scroll-movement.scroll-ultra-fast .helix-assembly::before {
  background: 
    radial-gradient(
      ellipse 70% 50% at center,
      transparent 20%,
      rgba(0, 0, 0, 0.2) 60%,
      rgba(0, 0, 0, 0.5) 100%
    );
  animation-duration: 0.3s;
}

@keyframes tunnelPulse {
  0%, 100% { transform: scale(1); opacity: 0.8; }
  50% { transform: scale(1.05); opacity: 1; }
}
